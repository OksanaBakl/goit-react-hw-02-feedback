{"version":3,"sources":["components/Section/Section.js","components/FeedbackOptions/FeedbackOptions.js","components/Statistics/Statistics.js","components/Notification/Notification.js","App.js","index.js","components/FeedbackOptions/FeedbackOptions.module.css","components/Statistics/Statistics.module.css","App.module.css"],"names":["Section","title","children","FeedbackOptions","options","onLeaveFeedback","className","styles","container","map","label","type","name","button","onClick","Statistics","good","neutral","bad","total","positivePercentage","Notification","message","App","state","evt","target","setState","prevState","countTotalFeedback","countPositiveFeedbackPercentage","Math","round","this","Component","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"iQAiBeA,EAdC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACzB,OACC,oCACC,6BAAKD,IACJC,M,gBCqBWC,EAvBS,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,gBACnC,OACC,qBAAKC,UAAWC,IAAOC,UAAvB,SACEJ,EAAQK,KAAI,SAACC,GAAD,OACZ,wBACCC,KAAK,SACLC,KAAMF,EAENJ,UAAWC,IAAOM,OAClBC,QAAST,EALV,SAOEK,GAJIA,S,gBCWKK,EAlBI,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,QAASC,EAAlB,EAAkBA,IAAKC,EAAvB,EAAuBA,MAAOC,EAA9B,EAA8BA,mBAA9B,OAClB,qBAAId,UAAWC,IAAOC,UAAtB,UACC,wCAAWQ,KACX,2CAAcC,KACd,uCAAUC,KACV,yCAAYC,KACZ,qDAAwBC,EAAxB,YCAaC,EARM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACvB,OAAO,4BAAIA,K,gBCKNC,E,4MACLC,MAAQ,CACPR,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGNb,gBAAkB,SAACoB,GAClB,IAAMb,EAAOa,EAAIC,OAAOd,KAExB,EAAKe,UAAS,SAACC,GAAD,sBAAmBhB,EAAOgB,EAAUhB,GAAQ,O,EAG3DiB,mBAAqB,WACpB,MAA+B,EAAKL,MACpC,OADA,EAAQR,KAAR,EAAcC,QAAd,EAAuBC,K,EAIxBY,gCAAkC,WACjC,IAAQd,EAAS,EAAKQ,MAAdR,KACFG,EAAQ,EAAKU,qBACnB,OAAOV,EAAQY,KAAKC,MAAOhB,EAAOG,EAAS,KAAO,G,4CAGnD,WAEC,MAA+Bc,KAAKT,MAA5BR,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,IACjBC,EAAQc,KAAKJ,qBACbT,EAAqBa,KAAKH,kCAEhC,OACC,sBAAKxB,UAAWC,IAAOC,UAAvB,UACC,cAAC,EAAD,CAASP,MAAO,2BAAhB,SACC,cAAC,EAAD,CACCG,QAAS,CAAC,OAAQ,UAAW,OAC7BC,gBAAiB4B,KAAK5B,oBAIvBc,EAAQ,EACR,cAAC,EAAD,CAASlB,MAAO,aAAhB,SACC,cAAC,EAAD,CACCe,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOA,EACPC,mBAAoBA,MAItB,cAAC,EAAD,CAAcE,QAAS,sC,GAlDVY,aAyDHX,IC7DfY,IAASC,OACR,cAAC,IAAMC,WAAP,UACC,cAAC,EAAD,MAEDC,SAASC,eAAe,U,kBCRzBC,EAAOC,QAAU,CAAC,UAAY,mCAAmC,OAAS,kC,kBCA1ED,EAAOC,QAAU,CAAC,UAAY,gC,kBCA9BD,EAAOC,QAAU,CAAC,UAAY,0B","file":"static/js/main.77f21d8d.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Section = ({ title, children }) => {\r\n\treturn (\r\n\t\t<section>\r\n\t\t\t<h1>{title}</h1>\r\n\t\t\t{children}\r\n\t\t</section>\r\n\t);\r\n};\r\n\r\nSection.propTypes = {\r\n\ttitle: PropTypes.string.isRequired,\r\n\tchildren: PropTypes.element.isRequired,\r\n};\r\n\r\nexport default Section;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport styles from \"./FeedbackOptions.module.css\";\r\n\r\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => {\r\n\treturn (\r\n\t\t<div className={styles.container}>\r\n\t\t\t{options.map((label) => (\r\n\t\t\t\t<button\r\n\t\t\t\t\ttype=\"button\"\r\n\t\t\t\t\tname={label}\r\n\t\t\t\t\tkey={label}\r\n\t\t\t\t\tclassName={styles.button}\r\n\t\t\t\t\tonClick={onLeaveFeedback}\r\n\t\t\t\t>\r\n\t\t\t\t\t{label}\r\n\t\t\t\t</button>\r\n\t\t\t))}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nFeedbackOptions.propTypes = {\r\n\toptions: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n\tonLeaveFeedback: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default FeedbackOptions;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport styles from \"./Statistics.module.css\";\r\n\r\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => (\r\n\t<ul className={styles.container}>\r\n\t\t<li>Good: {good}</li>\r\n\t\t<li>Neutral: {neutral}</li>\r\n\t\t<li>Bad: {bad}</li>\r\n\t\t<li>Total: {total}</li>\r\n\t\t<li>Positive feedback: {positivePercentage} %</li>\r\n\t</ul>\r\n);\r\n\r\nStatistics.propTypes = {\r\n\tgood: PropTypes.number.isRequired,\r\n\tneutral: PropTypes.number.isRequired,\r\n\tbad: PropTypes.number.isRequired,\r\n\ttotal: PropTypes.number.isRequired,\r\n\tpositivePercentage: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default Statistics;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Notification = ({ message }) => {\r\n\treturn <p>{message}</p>;\r\n};\r\n\r\nNotification.propTypes = {\r\n\tmessage: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Notification;\r\n","import React, { Component } from \"react\";\n\nimport Section from \"./components/Section/Section\";\nimport FeedbackOptions from \"./components/FeedbackOptions/FeedbackOptions\";\nimport Statistics from \"./components/Statistics/Statistics\";\nimport Notification from \"./components/Notification/Notification\";\n\nimport styles from \"./App.module.css\";\n\nclass App extends Component {\n\tstate = {\n\t\tgood: 0,\n\t\tneutral: 0,\n\t\tbad: 0,\n\t};\n\n\tonLeaveFeedback = (evt) => {\n\t\tconst name = evt.target.name;\n\t\t// console.log(name);\n\t\tthis.setState((prevState) => ({ [name]: prevState[name] + 1 }));\n\t};\n\n\tcountTotalFeedback = () => {\n\t\tconst { good, neutral, bad } = this.state;\n\t\treturn good + neutral + bad;\n\t};\n\n\tcountPositiveFeedbackPercentage = () => {\n\t\tconst { good } = this.state;\n\t\tconst total = this.countTotalFeedback();\n\t\treturn total ? Math.round((good / total) * 100) : 0;\n\t};\n\n\trender() {\n\t\t// console.log(this.state);\n\t\tconst { good, neutral, bad } = this.state;\n\t\tconst total = this.countTotalFeedback();\n\t\tconst positivePercentage = this.countPositiveFeedbackPercentage();\n\n\t\treturn (\n\t\t\t<div className={styles.container}>\n\t\t\t\t<Section title={\"Please, leave a feedback\"}>\n\t\t\t\t\t<FeedbackOptions\n\t\t\t\t\t\toptions={[\"good\", \"neutral\", \"bad\"]}\n\t\t\t\t\t\tonLeaveFeedback={this.onLeaveFeedback}\n\t\t\t\t\t/>\n\t\t\t\t</Section>\n\n\t\t\t\t{total > 0 ? (\n\t\t\t\t\t<Section title={\"Statistics\"}>\n\t\t\t\t\t\t<Statistics\n\t\t\t\t\t\t\tgood={good}\n\t\t\t\t\t\t\tneutral={neutral}\n\t\t\t\t\t\t\tbad={bad}\n\t\t\t\t\t\t\ttotal={total}\n\t\t\t\t\t\t\tpositivePercentage={positivePercentage}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Section>\n\t\t\t\t) : (\n\t\t\t\t\t<Notification message={\"No feedback has been given\"} />\n\t\t\t\t)}\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"FeedbackOptions_container__1p8E0\",\"button\":\"FeedbackOptions_button__2MqAp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Statistics_container__1L_ne\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__1D3Tu\"};"],"sourceRoot":""}